BEGIN_DERIVED_SCENE(MaterialTestCookTorranceEnvironmentMap, MaterialTestBase)
SETUP_SCENE(
    MaterialTestBase::setup();
    tracer->shader = new BasicDiffuseSpecularShader();
    //tracer->shader = new DirectEnvironmentMapShader();
    tracer->rays_per_pixel = 30;
);
std::shared_ptr<AreaLight> light;
BUILD_SCENE(
    MaterialTestBase::buildScene();
    //scene->env_map = loadStPetersEnvironmentMap();
    //scene->env_map = loadUffiziEnvironmentMap();
    //scene->env_map = loadRNLEnvironmentMap();
    scene->env_map = loadGraceEnvironmentMap();
);
END_SCENE()

// ------------------------------------------------------------ 
BEGIN_DERIVED_SCENE(MaterialTestCookTorranceDefaultsWhiteEnvironmentMap, MaterialTestCookTorranceEnvironmentMap)
SETUP_SCENE(
    MaterialTestCookTorranceEnvironmentMap::setup();
);
BUILD_SCENE(
    MaterialTestCookTorranceEnvironmentMap::buildScene();
    mesh->material = std::make_shared<CookTorranceMaterial>( 1.0, 1.0, 1.0 );
);
END_SCENE()
// ------------------------------------------------------------ 
BEGIN_DERIVED_SCENE(MaterialTestCookTorranceRoughness00WhiteEnvironmentMap, MaterialTestCookTorranceEnvironmentMap)
SETUP_SCENE(
    MaterialTestCookTorranceEnvironmentMap::setup();
);
BUILD_SCENE(
    MaterialTestCookTorranceEnvironmentMap::buildScene();
    mesh->material = std::make_shared<CookTorranceMaterial>( 1.0, 1.0, 1.0, 0.0 );
);
END_SCENE()
// ------------------------------------------------------------ 
BEGIN_DERIVED_SCENE(MaterialTestCookTorranceRoughness003WhiteEnvironmentMap, MaterialTestCookTorranceEnvironmentMap)
SETUP_SCENE(
    MaterialTestCookTorranceEnvironmentMap::setup();
);
BUILD_SCENE(
    MaterialTestCookTorranceEnvironmentMap::buildScene();
    mesh->material = std::make_shared<CookTorranceMaterial>( 1.0, 1.0, 1.0, 0.03 );
);
END_SCENE()
// ------------------------------------------------------------ 
BEGIN_DERIVED_SCENE(MaterialTestCookTorranceRoughness01WhiteEnvironmentMap, MaterialTestCookTorranceEnvironmentMap)
SETUP_SCENE(
    MaterialTestCookTorranceEnvironmentMap::setup();
);
BUILD_SCENE(
    MaterialTestCookTorranceEnvironmentMap::buildScene();
    mesh->material = std::make_shared<CookTorranceMaterial>( 1.0, 1.0, 1.0, 0.1 );
);
END_SCENE()
// ------------------------------------------------------------ 
BEGIN_DERIVED_SCENE(MaterialTestCookTorranceRoughness05WhiteEnvironmentMap, MaterialTestCookTorranceEnvironmentMap)
SETUP_SCENE(
    MaterialTestCookTorranceEnvironmentMap::setup();
);
BUILD_SCENE(
    MaterialTestCookTorranceEnvironmentMap::buildScene();
    mesh->material = std::make_shared<CookTorranceMaterial>( 1.0, 1.0, 1.0, 0.5 );
);
END_SCENE()
// ------------------------------------------------------------ 
BEGIN_DERIVED_SCENE(MaterialTestCookTorranceRoughness10WhiteEnvironmentMap, MaterialTestCookTorranceEnvironmentMap)
SETUP_SCENE(
    MaterialTestCookTorranceEnvironmentMap::setup();
);
BUILD_SCENE(
    MaterialTestCookTorranceEnvironmentMap::buildScene();
    mesh->material = std::make_shared<CookTorranceMaterial>( 1.0, 1.0, 1.0, 1.0 );
);
END_SCENE()

// ------------------------------------------------------------ 
// Parameter Sweeps
// ------------------------------------------------------------ 

BEGIN_DERIVED_SCENE(MaterialTestCookTorranceEnvironmentMapSweepRoughnessFull, MaterialTestMontageBase)
SETUP_SCENE(
    MaterialTestMontageBase::setup();
    tracer->shader = new BasicDiffuseSpecularShader();
    tracer->rays_per_pixel = 30;
);
BUILD_SCENE(
    MaterialTestMontageBase::buildScene();
    for( int mesh_index = 0; mesh_index < num_meshes; mesh_index++ ) {
        float roughness = (float) mesh_index / (num_meshes - 1);
        meshes[mesh_index]->material = std::make_shared<CookTorranceMaterial>( 1.0, 0.3, 0.3, roughness );
    }
    scene->env_map = loadStPetersEnvironmentMap();
);
END_SCENE()

BEGIN_DERIVED_SCENE(MaterialTestCookTorranceEnvironmentMapSweepRoughnessLow, MaterialTestMontageBase)
SETUP_SCENE(
    MaterialTestMontageBase::setup();
    tracer->shader = new BasicDiffuseSpecularShader();
    tracer->rays_per_pixel = 30;
);
BUILD_SCENE(
    MaterialTestMontageBase::buildScene();
    for( int mesh_index = 0; mesh_index < num_meshes; mesh_index++ ) {
        float roughness = (float) mesh_index / (num_meshes - 1) * 0.1;
        meshes[mesh_index]->material = std::make_shared<CookTorranceMaterial>( 1.0, 0.3, 0.3, roughness );
    }
    scene->env_map = loadStPetersEnvironmentMap();
);
END_SCENE()

BEGIN_DERIVED_SCENE(MaterialTestCookTorranceEnvironmentMapSweepRoughnessFullVaryingColors, MaterialTestMontageTwoParamBase)
SETUP_SCENE(
    MaterialTestMontageTwoParamBase::setup();
    //tracer->shader = new BasicDiffuseSpecularShader();
    tracer->shader = new DirectEnvironmentMapShader();
    tracer->rays_per_pixel = 30;
);
BUILD_SCENE(
    MaterialTestMontageTwoParamBase::buildScene();
    float param1; float param2;
    for( int mesh_index = 0; mesh_index < num_meshes; mesh_index++ ) {
        auto mesh = meshAtIndex(mesh_index, param1, param2);
        float roughness = param1;
        meshes[mesh_index]->material = std::make_shared<CookTorranceMaterial>( 1.0-param2, 0.3, param2, roughness );
    }
    scene->env_map = loadStPetersEnvironmentMap();
);
END_SCENE()

BEGIN_DERIVED_SCENE(MaterialTestCookTorranceEnvironmentMapSweepRoughnessLowVaryingColors, MaterialTestMontageTwoParamBase)
SETUP_SCENE(
    MaterialTestMontageTwoParamBase::setup();
    tracer->shader = new BasicDiffuseSpecularShader();
    //tracer->shader = new DirectEnvironmentMapShader();
    tracer->rays_per_pixel = 30;
);
BUILD_SCENE(
    MaterialTestMontageTwoParamBase::buildScene();
    float param1; float param2;
    for( int mesh_index = 0; mesh_index < num_meshes; mesh_index++ ) {
        auto mesh = meshAtIndex(mesh_index, param1, param2);
        float roughness = param1 * 0.1;
        meshes[mesh_index]->material = std::make_shared<CookTorranceMaterial>( 1.0-param2, 0.3, param2, roughness );
    }
    scene->env_map = loadStPetersEnvironmentMap();
);
END_SCENE()

#if 0
BEGIN_DERIVED_SCENE(MaterialTestCookTorranceEnvironmentMapSweepRoughnessFullVaryingSpecular, MaterialTestMontageTwoParamBase)
SETUP_SCENE(
    MaterialTestMontageTwoParamBase::setup();
    //tracer->shader = new BasicDiffuseSpecularShader();
    tracer->shader = new DirectEnvironmentMapShader();
    tracer->rays_per_pixel = 30;
);
BUILD_SCENE(
    MaterialTestMontageTwoParamBase::buildScene();
    float param1; float param2;
    for( int mesh_index = 0; mesh_index < num_meshes; mesh_index++ ) {
        auto mesh = meshAtIndex(mesh_index, param1, param2);
        float roughness = param1;
        auto material = std::make_shared<CookTorranceMaterial>( 1.0, 1.0, 1.0, roughness );
        material->specular = param2;
        meshes[mesh_index]->material = material;
    }
    scene->env_map = loadStPetersEnvironmentMap();
);
END_SCENE()

BEGIN_DERIVED_SCENE(MaterialTestCookTorranceEnvironmentMapSweepRoughnessLowVaryingSpecular, MaterialTestMontageTwoParamBase)
SETUP_SCENE(
    MaterialTestMontageTwoParamBase::setup();
    //tracer->shader = new BasicDiffuseSpecularShader();
    tracer->shader = new DirectEnvironmentMapShader();
    tracer->rays_per_pixel = 30;
);
BUILD_SCENE(
    MaterialTestMontageTwoParamBase::buildScene();
    float param1; float param2;
    for( int mesh_index = 0; mesh_index < num_meshes; mesh_index++ ) {
        auto mesh = meshAtIndex(mesh_index, param1, param2);
        float roughness = param1 * 0.1;
        auto material = std::make_shared<CookTorranceMaterial>( 1.0, 1.0, 1.0, roughness );
        material->specular = param2;
        meshes[mesh_index]->material = material;
    }
    scene->env_map = loadStPetersEnvironmentMap();
);
END_SCENE()
#endif

BEGIN_DERIVED_SCENE(MaterialTestCookTorranceEnvironmentMapSweepRoughnessLowVaryingFresnel, MaterialTestMontageTwoParamBase)
SETUP_SCENE(
    MaterialTestMontageTwoParamBase::setup();
    tracer->shader = new BasicDiffuseSpecularShader();
    //tracer->shader = new DirectEnvironmentMapShader();
    tracer->rays_per_pixel = 30;
);
BUILD_SCENE(
    MaterialTestMontageTwoParamBase::buildScene();
    float param1; float param2;
    for( int mesh_index = 0; mesh_index < num_meshes; mesh_index++ ) {
        auto mesh = meshAtIndex(mesh_index, param1, param2);
        float roughness = param1 * 0.1;
        auto material = std::make_shared<CookTorranceMaterial>( 1.0, 1.0, 1.0, roughness );
        material->setFresnelAtNormal(param2);
        meshes[mesh_index]->material = material;
    }
    scene->env_map = loadStPetersEnvironmentMap();
);
END_SCENE()
#if 0
// ------------------------------------------------------------ 
BEGIN_DERIVED_SCENE(MaterialTestCookTorranceAnimateRoughnessEnvironmentMap, MaterialTestCookTorranceEnvironmentMap)
SETUP_SCENE(
    //image_width = image_height = 128;
    MaterialTestCookTorranceEnvironmentMap::setup();
    //tracer->rays_per_pixel = 5;
);
BUILD_SCENE(
    MaterialTestCookTorranceEnvironmentMap::buildScene();
    auto material = std::make_shared<CookTorranceMaterial>( 1.0, 1.0, 1.0, 0.01 );
    mesh->material = material;
    tracer->setAnimationCallback(
        [material](float anim_progress) {
            float min_roughness = 0.01, max_roughness = 1.0;
            material->roughness = (max_roughness - min_roughness) * anim_progress + min_roughness;
        });
);
END_SCENE()
#endif
