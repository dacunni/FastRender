BEGIN_SCENE( SanMiguel )
SETUP_SCENE(
    image_width = image_height = 100;
    TestScene::setup();
    tracer->rays_per_pixel = 30;
);
BUILD_SCENE(
    //auto mesh = loader.loadMultiPart( "models/san-miguel/san-miguel.obj" );
    auto mesh = loader.loadMultiPartMerged( "models/san-miguel/san-miguel.obj" );
    //auto bounds = mesh->getAxisAlignedBounds();
    mesh->transform = std::make_shared<Transform>();
    //float scale = 35.0;
    float scale = 1.0;
    *mesh->transform = compose( makeScaling( scale, scale, scale ),
                                makeRotation( M_PI / 2, Vector4( 0.0, 1.0, 0.0 ) )//,
                              );
                               // makeTranslation( Vector4( 0.0, -bounds->ymin, 0.0 ) ) );
    container->add( mesh );

    auto s = std::make_shared<Sphere>( -1.25, 0.25, 0.75, 0.25 );
    s->material = std::make_shared<DiffuseMaterial>(1, 1, 0);
    container->add( s );
    s = std::make_shared<Sphere>( 1.25, 0.25, 0.75, 0.25 );
    s->material = std::make_shared<DiffuseMaterial>(0, 1, 0);
    container->add( s );
    s = std::make_shared<Sphere>( 0.0, 0.25, 3.0, 0.25 );
    s->material = std::make_shared<DiffuseMaterial>(0, 1, 1);
    container->add( s );

    scene->addPointLight( PointLight( Vector4( 20.0, 20.0, -15.0 ),
        RGBColor( 1.0, 1.0, 1.0 ).scaled(150.0) ) );
    scene->addPointLight( PointLight( Vector4( 20.0, 20.0, 10.0 ),
        RGBColor( 1.0, 1.0, 1.0 ).scaled(1300.0) ) );
    scene->addPointLight( PointLight( Vector4( 0.0, 20.0, 5.0 ),
        RGBColor( 1.0, 1.0, 1.0 ).scaled(500.0) ) );

    //scene->env_map = std::make_shared<ArcLightEnvironmentMap>();

    //tracer->shader = new BasicDiffuseSpecularShader();
    tracer->shader = new GoochShader();
    
#if 0 // TEMP
    Transform rotation = makeRotation( -0.13 * M_PI, Vector4(1, 0, 0) );
    Transform translation = makeTranslation( 0.0, 0.0, 100.0 );
    tracer->setCameraTransform( compose( makeTranslation( 1.8, 0.0, -40.0 ),
                                        rotation,
                                        translation ) );
#elif 0
    // FIXME - Something is wrong with the geometry from this angle
    Transform rotation = makeRotation( -0.13 * M_PI, Vector4(1, 0, 0) );
    Transform translation = makeTranslation( 0.0, 0.0, 80.0 );
    tracer->setCameraTransform( compose( makeTranslation( 1.8, -2.0, -40.0 ),
                                        makeRotation( 0.35, Vector4(0, 1, 0) ), // turn about Y
                                        rotation,
                                        translation ) );
#else
    // Over archway 
    Transform rotation = makeRotation( -0.13 * M_PI, Vector4(1, 0, 0) );
    Transform translation = makeTranslation( 0.0, 0.0, 40.0 );
    tracer->setCameraTransform( compose( makeTranslation( 1.8, -2.0, -40.0 ),
                                        rotation,
                                        translation ) );
#endif
);
END_SCENE()

